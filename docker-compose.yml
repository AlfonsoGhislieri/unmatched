services:
  backend:
    build: ./backend
    ports:
      - '8000:8000'
    volumes:
      - ./backend/src:/app/src
    environment:
      - ENV=development
      - DATABASE_URL=postgresql+psycopg2://dev_user:dev_password@postgresdb:5432/unmatched_dev
      - DOCKER_LOCAL_ADDRESS=http://${DOCKER_LOCAL_ADDRESS:-backend}:8000
    depends_on:
      - postgresdb
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://backend:8000/health']
      interval: 10s
      timeout: 5s
      retries: 3

  frontend:
    build: ./frontend
    ports:
      - '3000:3000'
    volumes:
      - ./frontend:/app
    environment:
      - DOCKER_LOCAL_ADDRESS=http://${DOCKER_LOCAL_ADDRESS:-frontend}:3000
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
      - REACT_APP_BACKEND_URL=http://backend:8000
    healthcheck:
      test: ['CMD', 'curl', '-I', 'http://frontend:3000']
      interval: 10s
      timeout: 5s
      retries: 3

  postgresdb:
    image: postgres:15
    command: ['postgres', '-c', 'log_statement=all']
    environment:
      - POSTGRES_USER=dev_user
      - PGUSER=dev_user
      - POSTGRES_PASSWORD=dev_password
      - POSTGRES_DB=unmatched_dev
    volumes:
      - pgdata:/var/lib/postgresql
    ports:
      - '5432:5432'
    healthcheck:
      test: ['CMD', 'pg_isready', '-d', 'unmatched_dev', '-U', 'dev_user']
      interval: 10s
      timeout: 5s
      retries: 3

volumes:
  pgdata: {}
